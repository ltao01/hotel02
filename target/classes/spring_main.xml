<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- 配置自动扫描 -->
    <context:component-scan base-package="cn.com.djin.ssm.service.impl"/>

    <!-- spring整合Mybatis步骤1：配置数据库的连接
			具有连接池数据源的，一般使用c3p0或者dbcp
			这里需要指定一些属性：	
			1、连接数据库的4大件
			2、c3p0的属性
		-->
    <!-- 读取db.properties文件 -->
    <context:property-placeholder location="classpath:db.properties"/>
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <!-- 连接数据库的四大件 -->
        <property name="driverClass" value="${db.driverClass}"/>
        <property name="jdbcUrl" value="${db.jdbcUrl}"/>
        <property name="user" value="${db.user}"/>
        <property name="password" value="${db.password}"/>
        <!-- 连接池的大小配置 -->
        <property name="maxPoolSize" value="20"/>
        <property name="minPoolSize" value="5"/>
    </bean>

    <!-- spring整合Mybatis步骤2：配置SqlSessionFactory对象
	                这里需要指定一些属性：	
		1、数据源对象
		2、mybatis的配置文件的位置，
			也可以不配置,将mybatis的配置文件的所有属性，在SqlSessionFactoryBean的属性中配置起来
			一般不推荐，因为有些复杂属性还是配置在mybatis的配置文件中里比较直观。
		3、mapping文件的位置
			也可以不配置，第2步中如果引用使用mybatis的的配置文件
     	-->

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 引用数据源 -->
        <property name="dataSource" ref="dataSource"/>
        <!-- 读取mybatis核心配置文件 -->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!-- 通过扫描包的形式为实体类起别名,别名为类名或者类名(User)首字母小写(user) -->
        <property name="typeAliasesPackage" value="cn.com.djin.ssm.entity"/>
        <!-- xml路径 -->
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
    </bean>

    <!-- spring整合Mybatis步骤3：扫描Mapper包得到mapper对应的的代理对象 
		必须符合mapper开发的所有格式：Mybatis_04_Mapper
	          这里需要指定一些属性：	
		1、mapper所在的包
		2、SqlSessionFactory对象的名字，是一个字符串
	    -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 扫描此包下的mapper接口 -->
        <property name="basePackage" value="cn.com.djin.ssm.mapper"/>
        <!-- 引入sqlSessionFactory -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>


    <!-- spring整合Mybatis步骤4：配置DataSourceTransactionManager对象
	          这里需要指定一些属性：	
		1、dataSource对象
	    -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!-- 引用数据源 -->
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--事务注解驱动-->
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>

</beans>